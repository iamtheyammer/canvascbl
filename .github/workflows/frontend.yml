# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Frontend

# Testing
on: [push]

# on:
#   push:
#     paths:
#       - /frontend

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set workdir and node version
      run: |
        WORKDIR=$GITHUB_WORKSPACE/frontend
        echo "::set-env name=WORKDIR::$WORKDIR"
        echo "::set-env name=PROJECT_NODE_VERSION::${cat $WORKDIR/.nvmrc}"

    - name: "Use Node.js $PROJECT_NODE_VERSION"
      uses: actions/setup-node@v1
      with:
        node-version: "$PROJECT_NODE_VERSION"

    - name: Install dependencies
      run: |
        cd $WORKDIR
        yarn install
        
    - name: Build react app
      run: |
        cd $WORKDIR
        yarn build
        
    - name: Zip built react app
      run: |
        cd $WORKDIR/build
        zip -r react-app.zip .
        
    - name: Upload built react app
      uses: actions/upload-artifact@v2
      with:
        name: frontend
        path: $WORKDIR/bin/react-app.zip
        
  deploy:
    runs-on: ubuntu-latest
    needs: build
    #Testing
#     if: github.ref == "refs/heads/master" || github.ref == "refs/heads/staging"
    
    steps:
      - name: Download built react app
        uses: actions/download-artifact@v2
        with:
          name: react-app
          path: "react-app.zip"
      
      - name: Unzip built react app
        run: |
          mkdir react-app
          unzip -d react-app react-app.zip
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      
      - name: Get S3 bucket name
        uses: cobraz/branch-environment-action@v1.0.0-alpha.1
        with:
          name: FRONTEND_S3_BUCKET_NAME
        env:
          MASTER_S3_BUCKET_NAME: ${{ secrets.FRONTEND_S3_BUCKET_NAME_PROD }}
          STAGING_S3_BUCKET_NAME: ${{ secrets.STAGING_S3_BUCKET_NAME_STG }}
                    
      - name: Upload react app
        env:
          # For testing
          FRONTEND_S3_BUCKET_NAME: canvascbl-test
        run: |
          aws s3 sync ./react-app s3://$FRONTEND_S3_BUCKET_NAME --delete
