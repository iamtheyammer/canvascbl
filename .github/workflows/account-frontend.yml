# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Account Frontend

on:
  push:
    paths:
      - 'account_frontend/**'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set workdir and node version
        run: |
          WORKDIR=$GITHUB_WORKSPACE/account_frontend
          echo "::set-env name=WORKDIR::$WORKDIR"
          echo "::set-env name=PROJECT_NODE_VERSION::$(cat $WORKDIR/.nvmrc)"

      - name: Use Node.js ${{ env.PROJECT_NODE_VERSION }} from .nvmrc
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.PROJECT_NODE_VERSION }}

      - name: Fetch cache
        id: fetch-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules-account_frontend
        with:
          path: ${{ env.WORKDIR }}/node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('account_frontend/yarn.lock') }}

      - name: Set current version
        run: |
          echo "::set-env name=REACT_APP_CURRENT_VERSION::$(NODE_DISABLE_COLORS=1 node -e 'console.log(Date.now())')"

      - name: Set environment variables
        uses: iamtheyammer/branch-env-vars@v1.0.0
        with:
          REACT_APP_DEFAULT_API_URI: |
            master:${{ secrets.REACT_APP_DEFAULT_API_URI_PROD }}
            staging:${{ secrets.REACT_APP_DEFAULT_API_URI_STG }}
          REACT_APP_BUILD_BRANCH: |
            master:master
            staging:staging
            !default:other
          REACT_APP_GOOGLE_ANALYTICS_ID: |
            master:${{ secrets.REACT_APP_GOOGLE_ANALYTICS_ID_PROD }}
            staging:${{ secrets.REACT_APP_GOOGLE_ANALYTICS_ID_STG }}
          REACT_APP_CANVASCBL_URL: |
            master:${{ secrets.REACT_APP_CANVASCBL_URL_PROD }}
            staging:${{ secrets.REACT_APP_CANVASCBL_URL_STG }}
          REACT_APP_TEACHER_URL: |
            master:${{ secrets.REACT_APP_TEACHER_URL_PROD }}
            staging:${{ secrets.REACT_APP_TEACHER_URL_STG }}
          REACT_APP_ACCOUNT_URL: |
            master:${{ secrets.REACT_APP_ACCOUNT_URL_PROD }}
            staging:${{ secrets.REACT_APP_ACCOUNT_URL_STG }}
          REACT_APP_PRIVACY_POLICY_URL: ${{ secrets.REACT_APP_PRIVACY_POLICY_URL }}
          REACT_APP_TERMS_OF_SERVICE_URL: ${{ secrets.REACT_APP_TERMS_OF_SERVICE_URL }}

      - name: Install dependencies
        run: |
          cd $WORKDIR
          yarn install

      - name: Build react app
        run: |
          cd $WORKDIR
          yarn build

      - name: Zip built react app
        run: |
          cd $WORKDIR/build
          zip -r react-app.zip .

      - name: Upload built react app
        uses: actions/upload-artifact@v2
        with:
          name: react-app
          path: ${{ env.WORKDIR }}/build/react-app.zip

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    if: endsWith(github.ref, 'heads/master') || endsWith(github.ref, 'heads/staging')

    steps:
      - name: Download built react app
        uses: actions/download-artifact@v2
        with:
          name: react-app
          path: ${{ env.GITHUB_WORKSPACE }}

      - name: Unzip built react app
        run: |
          cd $GITHUB_WORKSPACE
          mkdir react-app
          unzip -d react-app react-app.zip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Get S3 bucket name
        uses: iamtheyammer@branch-env-vars@v1.0.0
        with:
          ACCOUNT_FRONTEND_S3_BUCKET_NAME: |
            master:${{ secrets.ACCOUNT_FRONTEND_S3_BUCKET_NAME_PROD }}
            staging:${{ secrets.ACCOUNT_FRONTEND_S3_BUCKET_NAME_STG }}

      - name: Upload react app
        run: |
          cd $GITHUB_WORKSPACE
          aws s3 sync ./react-app s3://$ACCOUNT_FRONTEND_S3_BUCKET_NAME --delete
